# Hide the nginx version
server_tokens off;

ssl_certificate /home/fullchain.pem;
ssl_certificate_key /home/privkey.pem;

# IP address whitelist example
# These IP addresses belong to Cloudflare
# https://www.cloudflare.com/ips-v4

# allow 173.245.48.0/20;
# allow 103.21.244.0/22;
# allow 103.22.200.0/22;
# allow 103.31.4.0/22;
# allow 141.101.64.0/18;
# allow 108.162.192.0/18;
# allow 190.93.240.0/20;
# allow 188.114.96.0/20;
# allow 197.234.240.0/22;
# allow 198.41.128.0/17;
# allow 162.158.0.0/15;
# allow 104.16.0.0/13;
# allow 104.24.0.0/14;
# allow 172.64.0.0/13;
# allow 131.0.72.0/22;
# deny all;

# Only redirect for Gazelle. No need to redirect for Ocelot since
# users don't manually interact with that domain.
server {
    listen 80;
    server_name <GAZELLE_SITE_HOST>;
    return 301 https://<GAZELLE_SITE_HOST>$request_uri;
}

server {
    listen 80 default_server;
    return 404;
}

server {
    listen 443 ssl default_server;
    return 404;
}

# The main Gazelle + Ocelot server
server {
    listen 443 ssl;
    root /var/www/html;
    index index.php;

    server_name <GAZELLE_SITE_HOST>;

    location / {
        try_files $uri $uri/ =404;
        add_header X-Powered-By Octavius;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php_fpm:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Reduce attack surface by hiding the server versions
        fastcgi_hide_header X-Powered-By;
        add_header X-Powered-By Octavius;
    }

    # Ocelot reverse proxy
    location ~ /\w+/(announce|scrape|update|report)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://ocelot:2710;
        proxy_read_timeout 60s;

        proxy_redirect http://ocelot:2710 https://<GAZELLE_SITE_HOST>;
    }
}
